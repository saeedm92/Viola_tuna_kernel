@ File generated by CompCert 2.4
@ Command line:
	.syntax	unified
	.arch	armv7-a
	.fpu	vfpv3-d16
	.arm
	.text
	.balign 4
	.global	viola_main
viola_main:
	.cfi_startproc
	mov	r12, sp
	sub	sp, sp, #64
	.cfi_adjust_cfa_offset	64
	str	r12, [sp, #60]
	str	lr, [sp, #56]
	.cfi_rel_offset	lr, 56
	str	r4, [sp, #20]
	str	r5, [sp, #24]
	str	r6, [sp, #28]
	str	r7, [sp, #32]
	str	r8, [sp, #36]
	str	r9, [sp, #40]
	str	r10, [sp, #44]
	str	r11, [sp, #48]
	str	r0, [sp, #4]
	mov	r12, r2
	ldrb	r2, [r12, #0]
	ldrb	r0, [r12, #1]
	ldrb	r7, [r12, #2]
	cmp	r2, #75
	beq	.L100
	cmp	r2, #48
	bne	.L101
	cmp	r0, #0
	ite	eq
	moveq	r12, #1
	movne	r12, #0
	cmp	r0, #1
	ite	eq
	moveq	r2, #1
	movne	r2, #0
	cmp	r0, #2
	ite	eq
	moveq	r10, #1
	movne	r10, #0
	cmp	r0, #3
	ite	eq
	moveq	r9, #1
	movne	r9, #0
	cmp	r0, #6
	ite	eq
	moveq	r6, #1
	movne	r6, #0
	cmp	r0, #9
	ite	eq
	moveq	r5, #1
	movne	r5, #0
	cmp	r0, #10
	ite	eq
	moveq	r3, #1
	movne	r3, #0
	str	r3, [sp, #0]
	cmp	r0, #11
	ite	eq
	moveq	r3, #1
	movne	r3, #0
	str	r3, [sp, #8]
	cmp	r0, #12
	ite	eq
	moveq	r0, #1
	movne	r0, #0
	str	r0, [sp, #16]
	orr	r0, r3, r0
	ldr	r3, [sp, #0]
	orr	r3, r3, r0
	orr	r0, r5, r3
	orr	r0, r6, r0
	orr	r3, r9, r0
	orr	r3, r10, r3
	orr	r3, r2, r3
	orr	r0, r12, r3
	cmp	r0, #0
	beq	.L101
	eor	r3, r7, #1
	and	r3, r2, r3
	and	r4, r3, #1
	ldrb	r3, [r1, #1]
	and	r0, r3, #1
	and	r11, r4, r0
	mov	r4, r7
	and	r12, r12, r4
	and	r8, r12, #1
	ldrb	r12, [r1, #2]
	and	r4, r12, #255
	cmp	r4, #0
	ite	eq
	moveq	r12, #1
	movne	r12, #0
	orr	r12, r12, #1
	and	r8, r8, r12
	orr	r12, r11, r8
	and	r0, r12, r0
	str	r0, [sp, #12]
	and	r12, r7, #16
	mov	r12, r12, lsr #4
	cmp	r12, #0
	ite	eq
	moveq	r12, #1
	movne	r12, #0
	and	r12, r2, r12
	and	r0, r12, #1
	and	r12, r3, #16
	mov	r12, r12, lsr #4
	cmp	r12, #1
	ite	eq
	moveq	r12, #1
	movne	r12, #0
	and	r0, r0, r12
	orr	r0, r0, r8
	and	r12, r0, r12
	and	r0, r7, #255
	cmp	r0, #12
	ite	ne
	movne	r11, #1
	moveq	r11, #0
	and	r10, r10, r11
	and	r10, r10, #1
	cmp	r4, #192
	ite	eq
	moveq	r4, #1
	movne	r4, #0
	and	r10, r10, r4
	orr	r10, r10, r8
	and	r4, r10, r4
	cmp	r0, #255
	ite	ne
	movne	r10, #1
	moveq	r10, #0
	and	r9, r9, r10
	and	r10, r9, #1
	ldrb	r9, [r1, #3]
	and	r9, r9, #255
	cmp	r9, #255
	ite	eq
	moveq	r9, #1
	movne	r9, #0
	and	r10, r10, r9
	orr	r10, r10, r8
	and	r9, r10, r9
	and	r10, r7, #2
	mov	r10, r10, lsr #1
	cmp	r10, #1
	ite	eq
	moveq	r10, #1
	movne	r10, #0
	and	r10, r2, r10
	and	r10, r10, #1
	and	r11, r3, #2
	mov	r11, r11, lsr #1
	cmp	r11, #0
	ite	eq
	moveq	r11, #1
	movne	r11, #0
	and	r10, r10, r11
	and	r10, r10, r11
	and	r7, r7, #4
	mov	r7, r7, lsr #2
	cmp	r7, #1
	ite	eq
	moveq	r7, #1
	movne	r7, #0
	and	r2, r2, r7
	and	r2, r2, #1
	and	r3, r3, #4
	mov	r3, r3, lsr #2
	cmp	r3, #0
	ite	eq
	moveq	r3, #1
	movne	r3, #0
	and	r2, r2, r3
	and	r2, r2, r3
	mov	r3, r6
	cmp	r0, #17
	ite	ne
	movne	r6, #1
	moveq	r6, #0
	and	r3, r3, r6
	and	r6, r3, #1
	ldrb	r3, [r1, #6]
	and	r3, r3, #255
	cmp	r3, #17
	ite	eq
	moveq	r3, #1
	movne	r3, #0
	and	r6, r6, r3
	orr	r6, r6, r8
	and	r6, r6, r3
	mov	r3, r5
	cmp	r0, #243
	ite	ne
	movne	r5, #1
	moveq	r5, #0
	and	r3, r3, r5
	and	r5, r3, #1
	ldrb	r3, [r1, #9]
	and	r3, r3, #255
	cmp	r3, #243
	ite	eq
	moveq	r3, #1
	movne	r3, #0
	and	r5, r5, r3
	orr	r5, r5, r8
	and	r5, r5, r3
	ldr	r7, [sp, #0]
	cmp	r0, #0
	ite	ne
	movne	r3, #1
	moveq	r3, #0
	and	r0, r7, r3
	and	r7, r0, #1
	ldrb	r0, [r1, #10]
	and	r0, r0, #255
	cmp	r0, #0
	ite	eq
	moveq	r0, #1
	movne	r0, #0
	and	r7, r7, r0
	and	r11, r7, r0
	ldr	r0, [sp, #8]
	and	r0, r0, r3
	and	r7, r0, #1
	ldrb	r0, [r1, #11]
	and	r0, r0, #255
	cmp	r0, #0
	ite	eq
	moveq	r0, #1
	movne	r0, #0
	and	r7, r7, r0
	orr	r7, r7, r8
	and	r7, r7, r0
	ldr	r0, [sp, #16]
	and	r3, r0, r3
	and	r3, r3, #1
	ldrb	r0, [r1, #12]
	and	r0, r0, #255
	cmp	r0, #0
	ite	eq
	moveq	r1, #1
	movne	r1, #0
	and	r3, r3, r1
	orr	r3, r3, r8
	and	r3, r3, r1
	orr	r1, r7, r3
	orr	r0, r11, r1
	orr	r3, r5, r0
	orr	r0, r6, r3
	orr	r2, r2, r0
	orr	r2, r10, r2
	orr	r0, r9, r2
	orr	r1, r4, r0
	orr	r3, r12, r1
	ldr	r2, [sp, #12]
	orr	r3, r2, r3
	ldr	r0, [sp, #4]
	ldrb	r12, [r0, #10]
	and	r12, r12, #15
	cmp	r12, #1
	ite	eq
	moveq	r2, #1
	movne	r2, #0
	and	r2, r2, #1
	and	r0, r3, r2
	cmp	r0, #0
	beq	.L101
	mov	r0, #196608
	b	.L102
.L100:
	cmp	r0, #10
	bne	.L101
	cmp	r0, #10
	ite	eq
	moveq	r2, #1
	movne	r2, #0
	and	r3, r7, #15
	cmp	r3, #1
	ite	eq
	moveq	r12, #1
	movne	r12, #0
	and	r2, r2, r12
	ldr	r3, [sp, #4]
	ldrb	r12, [r3, #10]
	and	r12, r12, #15
	cmp	r12, #0
	ite	eq
	moveq	r0, #1
	movne	r0, #0
	and	r2, r2, r0
	cmp	r12, #1
	ite	eq
	moveq	r0, #1
	movne	r0, #0
	orr	r3, r2, r0
	and	r4, r3, #1
	ldrb	r2, [r1, #1]
	and	r0, r2, #1
	and	r3, r2, #16
	mov	r3, r3, lsr #4
	cmp	r3, #1
	ite	eq
	moveq	r12, #1
	movne	r12, #0
	ldrb	r3, [r1, #2]
	and	r3, r3, #255
	cmp	r3, #192
	ite	eq
	moveq	r5, #1
	movne	r5, #0
	ldrb	r3, [r1, #3]
	and	r3, r3, #255
	cmp	r3, #255
	ite	eq
	moveq	r6, #1
	movne	r6, #0
	and	r3, r2, #2
	mov	r3, r3, lsr #1
	cmp	r3, #0
	ite	eq
	moveq	r7, #1
	movne	r7, #0
	and	r2, r2, #4
	mov	r3, r2, lsr #2
	cmp	r3, #0
	ite	eq
	moveq	r8, #1
	movne	r8, #0
	ldrb	r2, [r1, #6]
	and	r2, r2, #255
	cmp	r2, #17
	ite	eq
	moveq	r9, #1
	movne	r9, #0
	ldrb	r3, [r1, #9]
	and	r3, r3, #255
	cmp	r3, #243
	ite	eq
	moveq	r3, #1
	movne	r3, #0
	ldrb	r2, [r1, #10]
	and	r2, r2, #255
	cmp	r2, #0
	ite	eq
	moveq	r10, #1
	movne	r10, #0
	ldrb	r2, [r1, #11]
	and	r2, r2, #255
	cmp	r2, #0
	ite	eq
	moveq	r11, #1
	movne	r11, #0
	ldrb	r1, [r1, #12]
	and	r2, r1, #255
	cmp	r2, #0
	ite	eq
	moveq	r1, #1
	movne	r1, #0
	and	r1, r1, #1
	and	r1, r11, r1
	and	r1, r10, r1
	and	r3, r3, r1
	and	r1, r9, r3
	and	r3, r8, r1
	and	r3, r7, r3
	and	r1, r6, r3
	and	r1, r5, r1
	and	r2, r12, r1
	and	r3, r0, r2
	eor	r12, r3, #1
	and	r0, r4, r12
	cmp	r0, #0
	beq	.L101
	mov	r0, #196608
	b	.L102
.L101:
	mov	r0, #0
.L102:
	ldr	r4, [sp, #20]
	ldr	r5, [sp, #24]
	ldr	r6, [sp, #28]
	ldr	r7, [sp, #32]
	ldr	r8, [sp, #36]
	ldr	r9, [sp, #40]
	ldr	r10, [sp, #44]
	ldr	r11, [sp, #48]
	ldr	lr, [sp, #56]
	add	sp, sp, #64
	bx	lr
	.balign	4
	.cfi_endproc
	.type	viola_main, %function
	.size	viola_main, . - viola_main
